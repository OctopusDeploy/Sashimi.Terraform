<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <RootNamespace>Calamari.Terraform.Tests</RootNamespace>
        <AssemblyName>Calamari.Terraform.Tests</AssemblyName>
        <RuntimeIdentifiers>win-x64;win-x86;linux-x64;osx-x64;linux-arm;linux-arm64</RuntimeIdentifiers>
        <IsPackable>false</IsPackable>
    </PropertyGroup>
    <PropertyGroup Condition="!$([MSBuild]::IsOSUnixLike())">
        <TargetFrameworks>net462;net6.0</TargetFrameworks>
    </PropertyGroup>
    <PropertyGroup Condition="$([MSBuild]::IsOSUnixLike())">
        <TargetFramework>net6.0</TargetFramework>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="FluentAssertions" Version="6.7.0" />
        <PackageReference Include="nunit" Version="3.13.2" />
        <PackageReference Include="NUnit3TestAdapter" Version="3.17.0" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.0.1" />
        <PackageReference Include="TeamCity.VSTest.TestAdapter" Version="1.0.25" />
        <PackageReference Include="NSubstitute" Version="4.2.2" />
        <PackageReference Include="Shouldly" Version="2.8.2" />
        <PackageReference Include="Octopus.Dependencies.TerraformCLI" Version="1.0.10" />
        <PackageReference Include="Calamari.Tests.Shared" Version="14.2.2" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Calamari\Calamari.csproj" />
    </ItemGroup>

    <Target Name="GetPackageFiles" AfterTargets="ResolveReferences" DependsOnTargets="RunResolvePackageDependencies">
        <Message Text="Collecting nupkg packages to bundle with Sashimi module binaries" />
        <ItemGroup>
            <!-- We ".ToLower()" on the Pacakge Definition names here as packages are downloaded with lower case, but this is using the
            Include name which is camel case, so we want to make sure we lower case it so it can find the path correctly on unix systems -->
            <Content Include="@(PackageDefinitions-&gt;'%(ResolvedPath)/$([System.String]::new('%(Name)').ToLower()).%(Version).nupkg')" Condition="$([System.String]::new('%(Name)').ToLower().Contains('octopus.dependencies'))">
                <Visible>false</Visible>
                <Link>@(PackageDefinitions->'%(Name).nupkg')</Link>
                <Pack>true</Pack>
                <PackageCopyToOutput>true</PackageCopyToOutput>
                <PackageFlatten>true</PackageFlatten>
                <PackagePath>@(PackageDefinitions->'contentFiles/any/any/%(Name).nupkg')</PackagePath>
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            </Content>
        </ItemGroup>
    </Target>

    <ItemGroup>
        <None Update="**/*.tf*">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="**/*.hcl">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="**/*.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="**/*.txt">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="GoogleCloud\example.tf">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="GoogleCloud\example.tfvars">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="GoogleCloud\test.txt">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
</Project>
